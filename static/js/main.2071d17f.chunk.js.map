{"version":3,"sources":["adapters.js","brompton.js","Pairing.js","Inspector.js","App.js","reportWebVitals.js","index.js"],"names":["UTF8NullDelimitedAdapter","dataView","array","Uint8Array","buffer","TextDecoder","decode","Uint32LEAdapter","getUint32","Uint32VersionNumber","major","getUint8","minor","patch","build","FirstByteBooleanAdapter","Uint32HoursAdapter","hours","FloatTempAdapter","degrees","getFloat32","FloatBatteryAdapter","percent","FloatVoltageAdapter","volt","toFixed","BROMPTON_SERVICES","name","characteristics","serviceUuid","uuid","adapter","value","Error","SERVICE_UUIDS","a","navigator","bluetooth","getAvailability","select","requestDevice","filters","optionalServices","device","window","console","log","selectedDevice","gatt","connect","Pairing","onConnect","resume","useState","step","setStep","prev","next","setSelectedDevice","Box","Typography","variant","component","Stepper","activeStep","orientation","Step","StepLabel","StepContent","WelcomeStepContent","onNext","InstallAppStepContent","onPrev","PairBikeStepContent","SwitchBikeOnStepContent","SelectBikeStep","onSelectDevice","ConnectionStep","WizardInfoButtonGroup","back","cont","ButtonGroup","Button","disabled","onClick","href","m","bleChecked","setBleChecked","bleAvailable","setBleAvailable","selectError","setSelectError","useEffect","checkBluetoothAvailability","then","available","catch","LinearProgress","Alert","severity","AlertTitle","toString","inProgress","setInProgress","connectionError","setConnectionError","CircularProgress","Inspector","onDisconnect","servicesMap","setServicesMap","error","setError","gattMutex","Mutex","acquire","release","Promise","all","map","getPrimaryService","service","Object","fromEntries","finally","sectionConfig","InspectorSection","disconnect","chars","setChars","expanded","setExpanded","charConfig","getCharacteristic","char","Accordion","onChange","AccordionSummary","expandIcon","sx","width","flexShrink","color","align","length","AccordionDetails","Table","TableBody","CharInspector","isLive","setIsLive","setValue","isWritable","properties","write","possibleValues","readValue","fromDataView","notify","addEventListener","event","newValue","target","debug","startNotifications","TableRow","TableCell","colSpan","possibleValue","toUint8Array","writeValue","App","setDevice","setResume","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2071d17f.chunk.js","sourcesContent":["export class UTF8NullDelimitedAdapter {\n    fromDataView(dataView) {\n        let array = new Uint8Array(dataView.buffer);\n        let text = new TextDecoder().decode(array);\n        return text;\n    }\n}\n\nexport class Uint32LEAdapter {\n    fromDataView(dataView) {\n        return dataView.getUint32(0, true);\n    }\n}\n\nexport class Uint32VersionNumber {\n    fromDataView(dataView) {\n        let major = dataView.getUint8(3);\n        let minor = dataView.getUint8(2);\n        let patch = dataView.getUint8(1);\n        let build = dataView.getUint8(0);\n        return `${major}.${minor}.${patch}.${build}`;\n    }\n}\n\nexport class FirstByteBooleanAdapter {\n    fromDataView(dataView) {\n        return !!dataView.getUint8(0);\n    }\n}\n\nexport class UnknownBytesAdapter {\n    fromDataView(dataView) {\n        return `(${dataView.byteBuffer.length} bytes)`;\n    }\n}\n\nexport class Uint32HoursAdapter {\n    fromDataView(dataView) {\n        let hours = dataView.getUint32(0, true);\n        return `${hours} hour(s)`;\n    }\n}\n\nexport class FloatTempAdapter {\n    fromDataView(dataView) {\n        let degrees = dataView.getFloat32(0, true);\n        return `${degrees} C`\n    }\n}\n\nexport class FloatBatteryAdapter {\n    fromDataView(dataView) {\n        let percent = dataView.getFloat32(0, true);\n        return `${percent}%`;\n    }\n}\n\nexport class FloatVoltageAdapter {\n    fromDataView(dataView) {\n        let volt = dataView.getFloat32(0, true);\n        return `${volt.toFixed(2)} v`;\n    }\n}\n\nexport class LightsOnOffAdapter {\n    possibleValues() {\n        return [\"Off\", \"On\"]\n    }\n\n    fromDataView(dataView) {\n        let value = dataView.getUint8(0);\n        if (value === 0) {\n            return \"Off\";\n        } else if (value === 1) {\n            return \"On\";\n        } else {\n            throw Error(`Unexpected lights value: ${value}`);\n        }\n    }\n\n    toUint8Array(value) {\n        if (value === \"On\") {\n            return new Uint8Array([0x01, 0x00, 0x00, 0x00]);\n        } else if (value === \"Off\") {\n            return new Uint8Array([0x00, 0x00, 0x00, 0x00]);\n        } else {\n            throw Error(`Unexpected lights value: ${value}`);\n        }\n    }\n}\n\nexport class LightsOnOffAutoAdapter {\n    possibleValues() {\n        return [\"Off\", \"On\", \"Auto\"]\n    }\n\n    fromDataView(dataView) {\n        let value = dataView.getUint8(0);\n        if (value === 0) {\n            return \"Off\";\n        } else if (value === 1) {\n            return \"On\";\n        } else if (value === 2) {\n            return \"Auto\";\n        } else {\n            throw Error(`Unexpected lights mode value: ${value}`);\n        }\n    }\n\n    toUint8Array(value) {\n        if (value === \"On\") {\n            return new Uint8Array([0x01, 0x00, 0x00, 0x00]);\n        } else if (value === \"Off\") {\n            return new Uint8Array([0x00, 0x00, 0x00, 0x00]);\n        } else if (value === \"Auto\") {\n            return new Uint8Array([0x02, 0x00, 0x00, 0x00]);\n        } else {\n            throw Error(`Unexpected lights mode value: ${value}`);\n        }\n    }\n}\n\nexport class ElectricAssistModeAdapter {\n    possibleValues() {\n        return [\"Off\", \"1\", \"2\", \"3\"];\n    }\n\n    fromDataView(dataView) {\n        let value = dataView.getUint8(0);\n        if (value === 0) {\n            return \"Off\";\n        } else if (value === 1) {\n            return \"1\";\n        } else if (value === 2) {\n            return \"2\";\n        } else if (value === 3) {\n            return \"3\";\n        } else {\n            throw Error(`Unexpected assist mode value: ${value}`);\n        }\n    }\n\n    toUint8Array(value) {\n        if (value === \"Off\") {\n            return new Uint8Array([0x00, 0x00, 0x00, 0x00]);\n        } else if (value === \"1\") {\n            return new Uint8Array([0x01, 0x00, 0x00, 0x00]);\n        } else if (value === \"2\") {\n            return new Uint8Array([0x02, 0x00, 0x00, 0x00]);\n        } else if (value === \"3\") {\n            return new Uint8Array([0x03, 0x00, 0x00, 0x00]);\n        } else {\n            throw Error(`Unexpected lights mode value: ${value}`);\n        }\n    }\n}","import {\n    UTF8NullDelimitedAdapter, Uint32LEAdapter, FirstByteBooleanAdapter, Uint32HoursAdapter, FloatTempAdapter,\n    FloatBatteryAdapter, FloatVoltageAdapter, LightsOnOffAdapter, LightsOnOffAutoAdapter, ElectricAssistModeAdapter,\n    Uint32VersionNumber\n} from './adapters';\n\n\nexport const BROMPTON_SERVICES = [\n    {\n        name: \"Bike Info\",\n        characteristics: [\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae0d\",\n                name: \"Manufacture Date\",\n                adapter: UTF8NullDelimitedAdapter,\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae01\",\n                name: \"Bike Frame Number\",\n                adapter: UTF8NullDelimitedAdapter,\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae02\",\n                name: \"Motor S/N\",\n                adapter: Uint32LEAdapter,\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae03\",\n                name: \"Controller S/N\",\n                adapter: UTF8NullDelimitedAdapter, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae06\",\n                name: \"Torque Sensor S/N\",\n                adapter: UTF8NullDelimitedAdapter, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae12\",\n                name: \"Battery S/N\",\n                adapter: UTF8NullDelimitedAdapter,\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae13\",\n                name: \"Bike S/N\",\n                adapter: UTF8NullDelimitedAdapter,\n            },\n        ],\n    },\n    {\n        name: \"Battery\",\n        characteristics: [\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20615\",\n                name: \"Battery Charge\",\n                adapter: FloatBatteryAdapter,\n            },\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20616\",\n                name: \"Battery Charge Cycles\",\n                adapter: Uint32LEAdapter,\n            },\n        ]\n    },\n    {\n        name: \"Lights\",\n        characteristics: [\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f2060f\",\n                name: \"Lights Status\",\n                adapter: LightsOnOffAdapter,\n            },\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20611\",\n                name: \"Lights Mode\",\n                adapter: LightsOnOffAutoAdapter,\n            },\n\n        ]\n    },\n    {\n        name: \"Motor\",\n        characteristics: [\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20612\",\n                name: \"Electric Assist Mode\",\n                adapter: ElectricAssistModeAdapter,\n            },\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f2061a\",\n                name: \"Akku Voltage\",\n                adapter: FloatVoltageAdapter,\n            },\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20602\",\n                name: \"Total On Time\",\n                adapter: Uint32HoursAdapter, // Unconfirmed\n            },\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20606\",\n                name: \"Max Motor FET Temperature\",\n                adapter: FloatTempAdapter, // Unconfirmed\n            },\n            {\n                serviceUuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20600\",\n                uuid: \"105c6761-74bf-4ffe-94ea-f8ba79f20607\",\n                name: \"Peak Motor Board Temperature\",\n                adapter: FloatTempAdapter, // Unconfirmed\n            },\n        ]\n    },\n    {\n        name: \"Versions\",\n        characteristics: [\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae04\",\n                name: \"Controller FW Version\",\n                adapter: Uint32VersionNumber, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae05\",\n                name: \"Controller BL Version\",\n                adapter: Uint32VersionNumber, // Unconfirmed\n            },\n\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae08\",\n                name: \"Motor FW Version\",\n                adapter: Uint32VersionNumber, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae09\",\n                name: \"Lights Fitted\",\n                adapter: FirstByteBooleanAdapter\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae0a\",\n                name: \"BLE Module FW Version\",\n                adapter: Uint32VersionNumber, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae0b\",\n                name: \"BLE Module BL Version\",\n                adapter: Uint32VersionNumber, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae0c\",\n                name: \"Calibration ID\",\n                adapter: Uint32VersionNumber, // Unconfirmed\n            },\n            {\n                serviceUuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\",\n                uuid: \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae15\",\n                name: \"Bike Version ID\",\n                adapter: Uint32VersionNumber\n            },\n        ]\n    }\n];\n\nexport const SERVICE_UUIDS = [\n    \"2f4ce2a3-fcbb-4f3a-b561-b9d78b5aae00\", // Bike Info\n    \"105c6761-74bf-4ffe-94ea-f8ba79f20600\" // Stats\n];\n","import { Stepper, Step, StepLabel, StepContent, Box, Button, Typography, Alert, AlertTitle, ButtonGroup, LinearProgress, CircularProgress } from '@mui/material';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { SERVICE_UUIDS } from './brompton';\n\n\nasync function checkBluetoothAvailability() {\n    return navigator.bluetooth && await navigator.bluetooth.getAvailability();\n}\n\nasync function select() {\n    const device = await navigator.bluetooth.requestDevice(\n        {\n            filters: [\n                { name: \"Brompton_Elec\" }\n            ],\n            optionalServices: SERVICE_UUIDS\n        }\n    );\n    window.device = device;\n    console.log(\"Selected device\", device);\n    return device;\n}\n\nasync function connect(selectedDevice) {\n    await selectedDevice.gatt.connect();\n    return selectedDevice;\n}\n\nexport default function Pairing({ onConnect, resume = false }) {\n    const [step, setStep] = useState(resume ? 4 : 0);\n    const [prev, next] = [() => setStep(step - 1), () => setStep(step + 1)];\n    const [selectedDevice, setSelectedDevice] = useState(null);\n\n    return (\n        <Box>\n            <Typography variant=\"h4\" component=\"div\">\n                {step ? \"Let's get set up\" : \"Your Brommie's stats\"}<br /><br />\n            </Typography>\n            <Stepper activeStep={step} orientation=\"vertical\">\n                <Step key={0}>\n                    <StepLabel>\n                        Welcome\n                    </StepLabel>\n                    <StepContent>\n                        <WelcomeStepContent onNext={next} />\n                    </StepContent>\n                </Step>\n                <Step key={1}>\n                    <StepLabel>\n                        Install the official Brompton Electric app\n                    </StepLabel>\n                    <StepContent>\n                        <InstallAppStepContent\n                            onPrev={prev}\n                            onNext={next} />\n                    </StepContent>\n                </Step>\n\n                <Step key={2}>\n                    <StepLabel>\n                        Pair your bike\n                    </StepLabel>\n                    <StepContent>\n                        <PairBikeStepContent\n                            onPrev={prev}\n                            onNext={next} />\n                    </StepContent>\n                </Step>\n\n                <Step key={3}>\n                    <StepLabel>\n                        Ensure your bike is switched on\n                    </StepLabel>\n                    <StepContent>\n                        <SwitchBikeOnStepContent\n                            onPrev={prev}\n                            onNext={next} />\n                    </StepContent>\n                </Step>\n\n                <Step key={4}>\n                    <StepLabel>\n                        Find your bike\n                    </StepLabel>\n                    <StepContent>\n                        <SelectBikeStep\n                            onPrev={prev}\n                            onSelectDevice={(device) => {\n                                setSelectedDevice(device);\n                                next();\n                            }} />\n                    </StepContent>\n                </Step>\n\n                <Step key={5}>\n                    <StepLabel>\n                        Connection attempt\n                    </StepLabel>\n                    <StepContent>\n                        <ConnectionStep\n                            onPrev={prev}\n                            onConnect={onConnect}\n                            selectedDevice={selectedDevice} />\n                    </StepContent>\n                </Step>\n            </Stepper>\n        </Box>\n    );\n}\n\nfunction WizardInfoButtonGroup({ back, cont }) {\n    return (\n        <ButtonGroup>\n            <Button disabled={!back} onClick={back}>\n                Back\n            </Button>\n            <Button onClick={cont}>\n                Continue\n            </Button>\n        </ButtonGroup >\n    )\n}\n\nfunction WelcomeStepContent({ onNext }) {\n    return (\n        <Fragment>\n            <Typography variant=\"p\" component=\"p\">\n                I've built this app to connect to my Brompton Electric, and access the information that is available\n                via Bluetooth Low Energy (BLE), but isn't shown in the official app.<br /><br />\n            </Typography>\n            <Typography variant=\"p\" component=\"p\">\n                <strong>\n                    Note that I'm not affiliated in any way with Brompton and no warranty or support is offered with\n                    this app.<br /><br />\n                </strong>\n            </Typography>\n            <Typography variant=\"p\" component=\"p\">\n                If you encounter any issues, or if you have any feedback, please click the button below to raise\n                an issue on the project's GitHub page. This is a free and open source project.\n                If you're a software developer, note that all contributions\n                are welcome!<br /><br />\n            </Typography>\n            <Box>\n                <Button href=\"https://github.com/AlfioEmanueleFresta/ebrom/issues\">Feedback</Button><br /><br />\n            </Box>\n            <WizardInfoButtonGroup back={null} cont={onNext} />\n        </Fragment>\n    )\n}\n\nfunction InstallAppStepContent({ onPrev, onNext }) {\n    return (\n        <Fragment>\n            <Typography variant=\"p\" component=\"p\">\n                Brompton use a proprietary Bluetooth pairing mechanism, which means you can only pair your bike to your\n                phone through their app.<br /><br />\n            </Typography>\n            <Typography variant=\"p\" component=\"p\">\n                Once that's done, other apps on your phone will also be able to connect to your bike, using\n                the standard Bluetooth Low Energy (BLE) interface.\n            </Typography>\n            <Box m={2}>\n                <Button variant=\"contained\"\n                    href=\"https://play.google.com/store/apps/details?id=com.brompton\">\n                    Download Brompton Electric app from the Google Play Store\n                </Button>\n            </Box>\n            <WizardInfoButtonGroup back={onPrev} cont={onNext} />\n        </Fragment>\n    )\n}\n\nfunction PairBikeStepContent({ onPrev, onNext }) {\n    return (\n        <Fragment>\n            <Typography variant=\"p\" component=\"p\">\n                Use the Brompton Electric app to connect to your bike for the first time.<br /><br />\n            </Typography>\n            <Typography variant=\"p\" component=\"p\">\n                You only need to do this once. You can skip this step, if you've done it before.<br /><br />\n            </Typography>\n            <WizardInfoButtonGroup back={onPrev} cont={onNext} />\n        </Fragment>\n    )\n}\n\nfunction SwitchBikeOnStepContent({ onPrev, onNext }) {\n    return (\n        <Fragment>\n            <Typography variant=\"p\" component=\"p\">\n                Turn on your bike.<br /><br />\n            </Typography>\n            <WizardInfoButtonGroup back={onPrev} cont={onNext} />\n        </Fragment>\n    )\n\n}\n\n\nfunction SelectBikeStep({ onPrev, onSelectDevice }) {\n    const [bleChecked, setBleChecked] = useState(false);\n    const [bleAvailable, setBleAvailable] = useState(false);\n    const [selectError, setSelectError] = useState(null);\n\n    useEffect(() => {\n        if (!bleChecked) {\n            checkBluetoothAvailability()\n                .then((available) => {\n                    setBleAvailable(available);\n                    setBleChecked(true);\n                })\n                .then(() => {\n                    select()\n                        .then(onSelectDevice)\n                        .catch(setSelectError)\n                });\n        }\n    });\n\n    return (\n        <Fragment>\n            <Typography variant=\"p\" component=\"p\">\n                Click continue, and select your bike from the list of Bluetooth devices. There should only\n                be one option, unless you're close to other bikes.<br /><br />\n            </Typography>\n\n            {!bleChecked &&\n                <Box>\n                    <LinearProgress />\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                        Click the button below, and select your bike from the list of Bluetooth devices.\n                    </Typography>\n                </Box>\n            }\n            {bleChecked && !bleAvailable &&\n                <Alert severity=\"error\">\n                    <AlertTitle>Bluetooth not available</AlertTitle>\n                    Ensure your device is capable of connecting via Bluetooth (e.g. latest Chrome on Android).\n                </Alert>}\n            {selectError &&\n                <Alert severity=\"error\">\n                    <AlertTitle>Failed to select device</AlertTitle>\n                    {selectError.toString()}\n                </Alert>}\n            <WizardInfoButtonGroup back={onPrev} cont={\n                bleAvailable\n                    ? () => select()\n                        .then(onSelectDevice)\n                        .catch(setSelectError)\n                    : null\n            } />\n        </Fragment >\n    )\n}\n\nfunction ConnectionStep({ selectedDevice, onPrev, onConnect }) {\n    const [inProgress, setInProgress] = useState(true);\n    const [connectionError, setConnectionError] = useState(false);\n\n    useEffect(() => {\n        connect(selectedDevice)\n            .then(onConnect)\n            .catch(() => {\n                setInProgress(false);\n                setConnectionError(true);\n            });\n    });\n\n    return (\n        <Fragment>\n            {inProgress &&\n                <Box>\n                    <Typography variant=\"h6\" component=\"div\">\n                        Connecting...\n                    </Typography>\n                    <CircularProgress />\n                </Box>\n            }\n            {connectionError &&\n                <Alert severity=\"error\">\n                    <AlertTitle>An error has occurred</AlertTitle>\n                    Failed to connect to your Brompton. Ensure the bike is paired\n                    to the Brompton app.\n                </Alert>}\n            <WizardInfoButtonGroup back={onPrev} cont={null} />\n        </Fragment>\n    )\n}","import {\n    Button, CircularProgress, Typography, Box,\n    Accordion, AccordionSummary, AccordionDetails,\n    Alert, AlertTitle, LinearProgress,\n    Table, TableBody, TableRow, TableCell, ButtonGroup\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Mutex } from 'async-mutex';\nimport { BROMPTON_SERVICES, SERVICE_UUIDS } from './brompton';\nimport { ConstructionOutlined } from '@mui/icons-material';\n\n\n\nexport default function Inspector({ device, onDisconnect }) {\n    const [servicesMap, setServicesMap] = useState(null);\n    const [error, setError] = useState(null);\n    const gattMutex = new Mutex();\n\n    useEffect(() => {\n        if (!servicesMap) {\n            gattMutex\n                .acquire()\n                .then(release =>\n                    Promise.all(\n                        SERVICE_UUIDS.map(async uuid => {\n                            let service = await device.gatt.getPrimaryService(uuid);\n                            return [uuid, service];\n                        })\n                    )\n                        .then(Object.fromEntries)\n                        .then(setServicesMap)\n                        .catch(setError)\n                        .finally(() => release())\n                )\n                .catch(setError);\n        }\n    });\n\n\n    return (\n        <Box>\n            <header>\n                <h2>{device.name}</h2>\n            </header>\n            {error &&\n                <Alert severity=\"error\">\n                    <AlertTitle>Service discovery failed</AlertTitle>\n                    {error.toString()}\n                </Alert>}\n            {servicesMap\n                ? BROMPTON_SERVICES.map(sectionConfig => {\n                    return <InspectorSection\n                        key={sectionConfig.name}\n                        gattMutex={gattMutex}\n                        servicesMap={servicesMap}\n                        sectionConfig={sectionConfig} />\n                })\n                : <Box>\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                        Discovering services...\n                    </Typography>\n                    <CircularProgress />\n                </Box>}\n            <br /><br />\n            <Button onClick={() => {\n                device.gatt.disconnect();\n                onDisconnect();\n            }}>\n                Disconnect\n            </Button>\n        </Box>\n    )\n}\n\nfunction InspectorSection({ gattMutex, servicesMap, sectionConfig }) {\n    const [chars, setChars] = useState(null);\n    const [error, setError] = useState(null);\n    const [expanded, setExpanded] = useState(false);\n\n    useEffect(() => {\n        if (!error && !chars) {\n            gattMutex\n                .acquire()\n                .then(release => {\n                    Promise.all(\n                        sectionConfig\n                            .characteristics\n                            .map(async charConfig => {\n                                let service = servicesMap[charConfig.serviceUuid];\n                                let char = await service.getCharacteristic(charConfig.uuid);\n                                return { gattMutex, char, charConfig }\n                            })\n                    )\n                        .then(setChars)\n                        .catch(setError)\n                        .finally(() => release())\n                })\n                .catch(setError);\n        }\n    });\n\n    return (\n        <Fragment key={sectionConfig.name}>\n            <Accordion\n                key={sectionConfig.name}\n                expanded={expanded}\n                onChange={() => setExpanded(!expanded)}>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography sx={{ width: '33%', flexShrink: 0 }}>\n                        <strong>{sectionConfig.name}</strong>\n                    </Typography>\n                    <Typography sx={{ color: 'text.secondary' }} align=\"right\">\n                        {error && <span>Error</span>}\n                        {!error && chars\n                            ? <span>{chars.length + \" values\"}</span>\n                            : <LinearProgress />}\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {error &&\n                        <Alert severity=\"error\">\n                            <AlertTitle>Service discovery failed</AlertTitle>\n                            {error.toString()}\n                        </Alert>}\n                    {!error && chars\n                        ? <Table>\n                            <TableBody>\n                                {chars.map(char => <CharInspector {...char} />)}\n                            </TableBody>\n                        </Table>\n\n                        : <LinearProgress />}\n                </AccordionDetails>\n            </Accordion>\n        </Fragment>\n    );\n}\n\nfunction CharInspector({ gattMutex, char, charConfig }) {\n    const [isLive, setIsLive] = useState(false);\n    const [value, setValue] = useState(null);\n    const [error, setError] = useState(null);\n\n    const adapter = new charConfig.adapter();\n    const isWritable = char.properties.write && adapter.possibleValues;\n    const possibleValues = isWritable && adapter.possibleValues();\n\n    useEffect(() => {\n        if (!error && !value) {\n            gattMutex\n                .acquire()\n                .then((release) => {\n                    char.readValue()\n                        .then(adapter.fromDataView)\n                        .then(setValue)\n                        .catch(setError)\n                        .finally(() => release())\n                });\n\n            if (char.properties.notify) {\n                console.log(\"char has notifications\", charConfig.name);\n                gattMutex\n                    .acquire()\n                    .then(async release => {\n                        char.addEventListener('characteristicvaluechanged', event => {\n                            let newValue = adapter.fromDataView(event.target.value);\n                            console.debug(\"Received notification\", charConfig.name, newValue);\n                            setValue(newValue)\n                        });\n                        char.startNotifications()\n                            .then(() => setIsLive(true))\n                            .catch(setError)\n                            .finally(() => release());\n                    })\n                    .catch(setError);\n            }\n        }\n    });\n\n    return (\n        <Fragment key={char.uuid}>\n            {error &&\n                <TableRow key={char.uuid + \"error\"}>\n                    <TableCell colSpan={2}>\n                        <Alert severity=\"error\">\n                            {error.toString()}\n                        </Alert>\n                    </TableCell>\n                </TableRow>}\n            <TableRow key={char.uuid}>\n                <TableCell key=\"name\">\n                    {charConfig.name} {isLive && \"🔄\"}\n                </TableCell>\n                <TableCell key=\"value\" align=\"right\">\n                    {isWritable\n                        ? <ButtonGroup variant=\"outlined\">\n                            {possibleValues\n                                .map(possibleValue => <Button\n                                    variant={possibleValue == value ? \"contained\" : \"outlined\"}\n                                    onClick={() => {\n                                        let array = adapter.toUint8Array(possibleValue);\n                                        setValue(possibleValue);\n                                        char.writeValue(array)\n                                            .catch(setError);\n                                    }}>\n                                    {possibleValue}\n                                </Button>)}\n                        </ButtonGroup>\n                        : <strong>{value ? value : \"...\"}</strong>}\n                </TableCell>\n            </TableRow>\n        </Fragment >\n    )\n\n}","import './App.css';\nimport React, { useState } from 'react';\nimport Pairing from './Pairing';\nimport Inspector from './Inspector';\nimport { Box } from '@mui/material';\n\n\n\nexport default function App() {\n  const [device, setDevice] = useState(null);\n  const [resume, setResume] = useState(false);\n\n  const disconnect = function () {\n    setDevice(false);\n    setResume(true);\n  }\n\n  return (\n    <Box m={2}>\n      {device ?\n        (<Inspector device={device} onDisconnect={disconnect} />) :\n        (<Pairing onConnect={setDevice} resume={resume} />)}\n    </Box>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}